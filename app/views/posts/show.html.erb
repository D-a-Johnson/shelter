<div class="container-fluid page-comments">
  <div class="row">
    <div class="col-sm-12 col-sm-offset-3">
      <div class="chat-header d-flex justify-content-between px-3 py-3">
        <h3><%= @post.title %></h3>
        <%= link_to "Back to shelter", shelter_path(@post.hinanjyo), class: "pr-3 mt-2" %>
      </div>
      <div class="post-info mt-3 pl-3 pr-2 pt-1 pb-1">
        <div class="upvote d-flex justify-content-between">
          <div class="post-user d-flex align-items-left">
            <%= cl_image_tag @post.user.avatar, class: "avatar" %>
            <h5 class="ml-2 mt-3"><%= @post.user.first_name.upcase %> <%= @post.user.last_name.upcase %></h5>
          </div>
          <div class="number-of-likes d-flex align-items-center mr-1">
            <% if user_signed_in? %>
              <% if current_user.voted_for? @post %>
                <%= link_to upvote_post_path do %>
                  <i class="fas fa-heart voted voted fa-2x"></i>
                <% end %>
              <% else %>
                <%= link_to upvote_post_path do %>
                  <i class="far fa-heart not-voted fa-2x"></i>
                <% end %>
              <% end %>
            <% else %>
              <i class="fas fa-heart fa-2x"></i>
            <% end %>
            <p class="ml-1 mt-3"><%= @post.get_likes.size %></p>
          </div>
        </div>
        <div class="mt-2 mb-2 post-description">
          <p><%= @post.description %></p>
          <div class="d-flex justify-content-between">
            <p class="post-date"><%= @post.created_at.strftime("%b. %d, %I:%M %p ") %></p>
            <div class="d-flex justify-content-end">
              <% if @post.user == current_user %>
                <%= link_to raw("<i class='fas fa-edit mr-2'></i>"), edit_shelter_post_path(@shelter.id, params[:id]) %>
                <%= link_to raw("<i class='fas fa-trash-alt mr-2'></i>"), post_path,
              data: {:confirm => 'Are you sure you want to delete this post?'}, :method => :delete  %>
              <% end %>
            </div>
          </div>
        </div>
      </div>
      <div class="comment-area">
        <div class="mt-3 comments">
          <% @post.comments.each do |comment| %>
            <%= render "comments/comment", comment: comment, user_is_comments_author: comment.user == current_user %>
          <% end %>
        </div>
        <% unless @post.completed  %>
          <% if policy(Comment).create? %>
            <div id="create-comment">
              <%= simple_form_for [ @post, Comment.new ], remote: true, html: {id: :comment_form } do |f| %>
                <%= f.input :content, label: false, class: "comment-input" %>
                <%= f.submit :SUBMIT, class: "btn btn-dark cmtarea mt-1" %>
              <% end %>
          <% else %>
            <p class="mt-3 text-center cant-comment">You can't comment! <%= link_to "Sign in" , new_user_session_path %> or <%= link_to "Sign up?", new_user_registration_path %></p>
            </div>
          <% end %>
        </div>
        <% if @post.user == current_user %>
          <div class="post-complete">
            <%#= simple_form_for @post, url: shelter_post_path(@shelter), method: :patch do |f| %>
              <%#= f.input :completed, as: :boolean, value: true, as: :hidden %>
              <%#= f.submit "MARK REQUEST AS COMPLETED", class: "btn btn-dark completed" %>
            <%# end %>

            <%#= link_to "MARK AS COMPLETED", { controller: "posts",
              action: "update",
              id: @post.id,
              hinanjyo_id: @shelter.id,
              completed: true}, method: 'patch', class: "btn btn-dark completed"
             %>
          </div>
        <% end %>
      <% else %>
      <p class="btn btn-dark cmtarea">This request is completed</p>
      <% end %>
    </div>
  </div>
</div>
<% content_for :after_js do %>
  <script>
    comments = document.querySelectorAll('.comment')
    lastComment = comments[comments.length - 1]
    lastComment.scrollIntoView();

    App['post_<%= @post.id %>'] = App.cable.subscriptions.create({ channel: 'PostsChannel', post_id: <%= @post.id %>}, {
      received: (data) => {
        <% if user_signed_in? %>
          if (data.current_user_id !== <%= current_user.id %>){
            let receiverContainer = document.querySelector('.comments');
            receiverContainer.insertAdjacentHTML('beforeend', data.comment_partial)
            comments = document.querySelectorAll('.comment')
            lastComment = comments[comments.length - 1]
            lastComment.scrollIntoView();
          }
      <% end %>
    }
  }
  )
  </script>
<% end %>

